- name: "Create the radarr home directory"
  file:
    path: "{{ radarr_home }}"
    state: directory
    owner: debian-transmission
    group: debian-transmission

- name: "Run the radarr container"
  include_role:
    name: mhutter.docker-systemd-service
  vars:
    container_name: radarr
    container_image: lscr.io/linuxserver/radarr:arm32v7-develop
    container_docker_pull: no
    container_ports:
      - "{{ ansible_default_ipv4.address }}:{{ radarr_port }}:{{ radarr_port }}/tcp"
    container_env:
      PUID: "{{ transmission_uid | quote }}"
      PGID: "{{ transmission_gid | quote }}"
      TZ: "Europe/Paris"
    container_volumes:
      - "{{ radarr_home }}:/config"
      - "{{ radarr_films_dir }}:/tv"
      - "{{ transmission_download_dir }}:/downloads"
    container_args: "--cpus 1 --memory 150m" # 150 MB
    service_systemd_unit_options:
      After: "docker.service mnt-nas-films.mount mnt-nas-transmission.mount jackett_container.service"
      Requires: "docker.service mnt-nas-films.mount mnt-nas-transmission.mount jackett_container.service"

- name: "Backup the radarr database"
  cron:
    name: "Backup the radarr database"
    minute: "0"
    hour: "1"
    job: "{{ syno_rsync }} {{ radarr_home }}/radarr.db {{ user }}@{{ syno_internal_ip }}:~/backups/radarr/radarr.db"
    user: "{{ user }}"

- name: "Copy script ensuring the NAS dirs are mounted"
  template:
    src: ensure-nas-mounted.sh.j2
    dest: /root/ensure-nas-mounted.sh
    owner: root
    group: root
    mode: 0744

- name: "Regularly try to mount the NAS and restart the rr suite (for when the pi start faster than the NAS)"
  cron:
    name: "ensure NAS is mounted"
    minute: "*/5"
    job: /root/ensure-nas-mounted.sh
    user: root
