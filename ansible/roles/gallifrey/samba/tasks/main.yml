- name: Install the samba packages
  apt:
    name:
    - samba-common-bin
    - samba-common
    - smbclient
    - cifs-utils
    - "linux-modules-extra-{{ ansible_kernel }}" # to install iocharset utf8
    state: present

- name: Create the nas mountpoint hirearchy
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
  loop:
  - "{{ nas_mount_point }}"
  - "{{ download_directory }}"
  - "{{ radarr_films_dir }}"
  - "{{ sonarr_series_dir }}"

- name: Render the samba credentials configuration file
  template:
    src: "smb-{{ item }}.j2"
    dest: "{{ user_home }}/.smb-{{ item }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: "0600"
  loop:
    - rr
    - transmission

- name: Auto mount the downloads samba volume
  lineinfile:
    path: /etc/fstab
    state: present
    regexp: '^//{{ peers["chambonas"]["wireguard"]["ip"] }}/downloads/transmission'
    line: "//{{ peers['chambonas']['wireguard']['ip'] }}/downloads/transmission\t{{ download_directory }}\tcifs\tuid={{ user_uid }},gid={{ user_gid }},credentials={{ user_home }}/.smb-transmission,iocharset=utf8,vers=3.0,noperm,nofail 0 0"
  notify:
  - mount transmission mountpoint
  - daemon-reload

- name: Auto mount the films samba volume
  lineinfile:
    path: /etc/fstab
    state: present
    regexp: '^//{{ peers["chambonas"]["wireguard"]["ip"] }}/video/Films'
    line: "//{{ peers['chambonas']['wireguard']['ip'] }}/video/Films\t{{ radarr_films_dir }}\tcifs\tuid={{ user_uid }},gid={{ user_gid }},credentials={{ user_home }}/.smb-rr,iocharset=utf8,vers=3.0,noperm,nofail 0 0"
  notify:
  - mount films mountpoint
  - daemon-reload

- name: Auto mount the series samba volume
  lineinfile:
    path: /etc/fstab
    state: present
    regexp: '^//{{ peers["chambonas"]["wireguard"]["ip"] }}/video/Series'
    line: "//{{ peers['chambonas']['wireguard']['ip'] }}/video/Series\t{{ sonarr_series_dir }}\tcifs\tuid={{ user_uid }},gid={{ user_gid }},credentials={{ user_home }}/.smb-rr,iocharset=utf8,vers=3.0,noperm,nofail 0 0"
  notify:
  - mount series mountpoint
  - daemon-reload

- name: Create a drop-in unit directory for each mount point systemd target
  file:
    state: directory
    path: "/usr/lib/systemd/system/mnt-nas-{{ item }}.mount.d"
    owner: root
    group: root
  loop:
  - transmission
  - films
  - series

- name: Ensure the samba mount points are mounted after wireguard is started
  copy:
    src: dependencies.conf
    dest: "/usr/lib/systemd/system/mnt-nas-{{ item }}.mount.d/dependencies.conf"
    owner: root
    group: root
  loop:
  - transmission
  - films
  - series
  notify:
  - daemon-reload
