- name: "Create user group"
  group:
    name: "{{ group }}"
    state: present

- name: "Create user"
  user:
    name: "{{ user }}"
    uid: "{{ user_uid }}"
    groups: "{{ group }},sudo"
    append: yes
    state: present
    shell: /bin/bash
    createhome: yes
    home: "{{ user_home }}"
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa

- name: "Add user to the sudoers"
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%br ALL=\(ALL\) NOPASSWD: ALL$'
    line: "%{{ user }} ALL=(ALL) NOPASSWD: ALL"

- name: "Setup user authorized keys"
  template:
    src: authorized_keys.j2
    dest: "{{ user_home }}/.ssh/authorized_keys"
    owner: "{{ user }}"
    group: "{{ group }}"

- name: "Only authorize select users to ssh"
  lineinfile:
    path: /etc/ssh/sshd_config
    line: "AllowUsers {{ user }}"
    regexp: "AllowUsers"
    state: present
  notify:
    - restart ssh

- name: "Remove any ssh authorized_keys"
  file:
    path: /home/pi/.ssh/authorized_keys
    state: absent

- name: Enable the ssh service
  systemd:
    name: ssh
    enabled: yes
    masked: no

- name: "Mount temporary directories as tmpfs to save the SD card"
  lineinfile:
    path: /etc/fstab
    line: "{{ item }}"
    regexp: "{{ item }}"
    state: present
  with_items:
    - "tmpfs /tmp tmpfs defaults,noatime,nosuid,size=50m 0 0"
    - "tmpfs /var/tmp tmpfs defaults,noatime,nosuid,size=20m 0 0"
    - "tmpfs /var/log tmpfs defaults,noatime,nosuid,mode=0755,size=10m 0 0"
