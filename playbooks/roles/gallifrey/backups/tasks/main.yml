- name: "Create backup directories"
  file:
    path: "/home/{{ user }}/backups/{{ item }}"
    state: directory
  become: yes
  become_user: "{{ user }}"
  with_items:
    - sophro

- name: "Schedule sophro backups"
  cron:
    name: "backup sophro"
    minute: "0"
    hour: "0"
    job: >
      /usr/local/bin/dogwrap -n "Backup sophro web files"
      --submit_mode all
      -k $(grep apikey {{ user_home }}/.dogrc | cut -d= -f2 | sed "s/ //")
      "rsync -r --delete {{ user }}@51.254.120.74:{{ user_home }}/backups/ {{ user_home }}/backups/sophro"
  become: yes
  become_user: "{{ user }}"

- name: "Schedule the backup of the wallabag database"
  cron:
    name: "backup wallabag db"
    minute: "0"
    hour: "0"
    job: >
      /usr/local/bin/dogwrap -n "Backup wallabag db"
      --submit_mode all
      -k $(grep apikey {{ user_home }}/.dogrc | cut -d= -f2 | sed 's/ //')
      "rsync -r {{ user_home }}/wallabag/data/db/wallabag.sqlite {{ user }}@{{ home_domain }}:{{ user_home }}/backups/wallabag/wallabag.sqlite"
  become: yes
  become_user: "{{ user }}"

- name: "Schedule the backup of the calibre metadata database"
  cron:
    name: "backup calibre db"
    minute: "0"
    hour: "0"
    job: >
      /usr/local/bin/dogwrap -n "Backup calibre metadata db"
      --submit_mode all
      -k $(grep apikey {{ user_home }}/.dogrc | cut -d= -f2 | sed 's/ //')
      "rsync -r {{ user_home }}/calibre/books/metadata.db {{ user }}@{{ home_domain }}:{{ user_home }}/backups/calibre/metadata.db"
  become: yes
  become_user: "{{ user }}"


- name: "Schedule the backup of the calibre app database"
  cron:
    name: "backup calibre app db"
    minute: "0"
    hour: "0"
    job: >
      /usr/local/bin/dogwrap -n "Backup calibre db"
      --submit_mode all
      -k $(grep apikey {{ user_home }}/.dogrc | cut -d= -f2 | sed 's/ //')
      "rsync -r {{ user_home }}/calibre/config/app.db {{ user }}@{{ home_domain }}:{{ user_home }}/backups/calibre/app.db"
  become: yes
  become_user: "{{ user }}"

- name: "Schedule the backup of the isso database"
  cron:
    name: "backup isso db"
    minute: "0"
    hour: "0"
    job: >
      /usr/local/bin/dogwrap -n "Backup isso db"
      --submit_mode all
      -k $(grep apikey {{ user_home }}/.dogrc | cut -d= -f2 | sed 's/ //')
      "rsync -r {{ isso_home }}/db/comments.db {{ user }}@{{ home_domain }}:{{ user_home }}/backups/isso/comments.db"
  become: yes
  become_user: "{{ user }}"
