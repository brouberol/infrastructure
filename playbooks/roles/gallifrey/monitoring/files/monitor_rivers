#!/usr/bin/env python3

import requests

from enum import Enum
from bs4 import BeautifulSoup
from datadog.dogstatsd import DogStatsd

statsd = DogStatsd(socket_path="/var/run/datadog/datadog-agent.socket")

RIVER_LEVEL_URLS = {
    "chaulet": "https://www.vigicrues.gouv.fr/services/observations.json/?CdStationHydro=V504881301&FormatDate=iso",
    "gravieres": "https://www.vigicrues.gouv.fr/services/observations.json/?CdStationHydro=V504503001&FormatDate=iso",
}

VIGICRUE_ARDECHE_URL = "https://www.vigicrues.gouv.fr/niv2-bassin.php?CdEntVigiCru=20"


class AlertLevel(Enum):
    GREEN = 0
    YELLOW = 1
    ORANGE = 2
    RED = 3


def monitor_alert_level():
    html = requests.get(VIGICRUE_ARDECHE_URL).text
    soup = BeautifulSoup(html, features="html.parser")
    links = soup.find_all("a", class_="basin-item-vigilance")
    alert_text= soup.find("button", id="dropdownMenu4").parent.p.text
    alert_level = None
    if "Vert" in alert_text:
        alert_level = AlertLevel.GREEN
    elif "Jaune" in alert_text:
        alert_level = AlertLevel.YELLOW
    elif "Orange" in alert_text:
        alert_level = AlertLevel.ORANGE
    elif "Rouge" in alert_text:
        alert_level = AlertLevel.RED

    if alert_level is not None:
        statsd.gauge(
            "river.alert_level", tags=["river:chassezac"], value=alert_level.value
        )


def monitor_river(station_name):
    data = requests.get(RIVER_LEVEL_URLS[station_name]).json()
    datapoint = data["Serie"]["ObssHydro"][-1]
    value = datapoint["ResObsHydro"]
    statsd.gauge(
        "river.level",
        value=value,
        tags=["station:%s" % (station_name), "river:chassezac"],
    )


def main():
    monitor_alert_level()
    monitor_river("chaulet")
    monitor_river("gravieres")


if __name__ == "__main__":
    main()
